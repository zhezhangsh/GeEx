gex <- lapply(gex, function(g) g[rownames(g) %in% rownames(anno), ])
n2 <- sapply(gex, nrow)
n2/n1
saveRDS(gex, 'gex.rds')
g <- lapply(gex, rownames)
str(g)
n2
sapply(gex, nrow)
x$Dataset$Num_Gene <- as.vector(n2)
meta$Dataset$Num_Gene <- as.vector(n2)
meta <- readRDS('metadata.rds')
meta$Dataset$Num_Gene <- as.vector(n2)
head(meta[[1]])
saveRDS(meta, 'metadata.rds')
length(g)
z <- table(unlist(g, use.names=FALSE))
length(z)
z <- z[order(as.numeric(z))]
head(z)
z <- z[order(as.numeric(names(z)))]
head(z)
z[1:20]
anno <- anno[names(z), ]
br[[1]][1:2, ]
br[[4]][1:2, ]
a <- anno[[4]]
a[1:2, ]
a <- anno[names(z), ]
dim(a)
head(a)
b <- colnames(br[[4]])
b
dim(a)
a[1:2, ]
a <- a[, c('Symbol', 'type_of_gene', 'description')]
dim(a)
colnames(a) <- c('Name', "Type"    ,    "Title")
a[1:2, ]
head(z)
a$Num_Dataset <- as.vector(z)
a[1:2, ]
length(g)
str(g)
n <- rep(0, length(z))
head(n)
names(n) <- names(z)
head(z)
n0 <- meta[[1]]$Num_Sample
n0[1:2]
for (i in 1:length(g)) n[names(g[[i]])] <- n[names(g[[i]])] + n0[i]
head(n)
summary(n)
length(g)
for (i in 1:length(g)) n[(g[[i]])] <- n[(g[[i]])] + n0[i]
head(n)
summary(n)
head(n)
br[[4]][1:2, ]
a$Num_Sample <- as.vecotr(n)
a$Num_Sample <- as.vector(n)
head(a)
a$Species <- 'Human'
br[[4]][1:2, ]
a$Species <- 'human'
a$ID <- rownames(a)
a[1:2, ]
b <- a[, colnames(br[[4]])]
b[1:2, ]
length(x)
names(x)
u <- UrlEntrezGene(rownames(a))
head(u)
b$ID <- AddHref(b$ID, u)
b[1:2, ]
dim(x[[3]])
sum(n0)
x$Gene <- b
b[1:2, ]
ds <- meta[[1]]
dim(ds)
ds[1:2, ]
sum(ds$Num_Sample)
n1 <- ds$Num_Sample
sum(ds$Num_Group)
y <- meta[[2]]
y[1:2, ]
y <- split(rownames(y), y$Dataset)
y
n1 <- sapply(y, length)
n1
sum(n1)
meta$Dataset$Num_Group <- as.vector(n1)
y <- meta[[3]]
head(y)
y <- split(rownames(y), y$Dataset)
n2 <- sapply(y, length)
n2
meta$Dataset$Num_Sample <- as.vector(n2)
y <- meta$Sample
y[1:2, ]
y <- split(rownames(y), y$Group)
n3 <- sapply(y, length)
n3
length(n3)
meta$Group$Num_Sample <- as.vector(n3)
saveRDS(meta, 'metadata.rds')
x$Dataset$Num_Group <- meta$Dataset$Num_Group
x$Dataset$Num_Sample <- meta$Dataset$Num_Sample
x$Group$Num_Sample <- meta$Group$Num_Sample
head(a)
head(n)
n[1:length(n)] <- 0
head(n)
sum(n)
for (i in 1:length(n1)) n[g[[i]] <- n[g[[i]]] + n1[i]
)
for (i in 1:length(n1)) n[g[[i]]] <- n[g[[i]]] + n1[i]
max(n)
n1
n[1:length(n)] <- 0
for (i in 1:length(n1)) n[g[[i]]] <- n[g[[i]]] + n2[i]
max(n)
a$Num_Sample <- n
head(a)
head(b)
b$Num_Sample <- a$Num_Sample
b[1:4, ]
x$Gene <- b
saveRDS(x, 'browse_table.rds')
setwd("/zhangz/rchive/data/gex/public/slex")
path.coll <- getwd()
path.coll
PrepareGeexCollection(getwd())
path.gene=paste(Sys.getenv('RCHIVE_HOME'), 'data/gene/public/entrez/r', sep='/')
path.homo=paste(Sys.getenv('RCHIVE_HOME'), 'data/gene/public/homologene/r', sep='/')
library(rchive);
library(awsomics);
library(ff);
fn.meta<-paste(path.coll, 'metadata.rds', sep='/');
fn.gex<-paste(path.coll, 'gex.rds', sep='/');
fn.browse<-paste(path.coll, 'browse_table.rds', sep='/');
if (!file.exists(fn.meta))
stop("Error: metadata file not exist:", fn.meta, '\n');
if (!file.exists(fn.gex))
stop("Error: expression data file not exist:", fn.gex, '\n');
if (!file.exists(fn.browse))
stop("Error: formatted tables not exist:", fn.gex, '\n');
meta<-readRDS(fn.meta);
gex<-readRDS(fn.gex);
ds<-meta$Dataset;
ds.id<-intersect(names(gex), rownames(ds));
if (length(ds.id) == 0) stop('Error: no matching dataset ID in metadata table and expression matrix\n');
ds<-ds[ds.id, ];
gex<-gex[ds.id];
gex<-lapply(gex, as.matrix);
tax.nm<-tolower(ds$Species);
names(tax.nm)<-rownames(ds);
dim(ds)
ds
meta <- readRDS('metadata.rds')
x <- meta[[1]]
x[1:2, ]
dim(x)
x <- cbind(x[, 1:3], Species='Human', x[, 4:8])
head(x)
meta$Dataset <- x
saveRDS(meta, 'metadata.rds')
br <- readRDS('browse_table.rds')
x <- br[[1]]
x[1:2, ]
dim(x)
x <- cbind(x[, 1:4], Species='Human', x[, 5:9])
x[1:2, ]
br$Dataset <- x
saveRDS(br, 'browse_table.rds')
rm(list=ls())
PrepareGeexCollection(getwd())
names(meta)
meta <- readRDS('metadata.rds')
meta[[3]][1:2, ]
names(meta)
path.coll <- getwd()
path.gene=paste(Sys.getenv('RCHIVE_HOME'), 'data/gene/public/entrez/r', sep='/')
path.homo=paste(Sys.getenv('RCHIVE_HOME'), 'data/gene/public/homologene/r', sep='/')
library(rchive);
library(awsomics);
library(ff);
############## Required files
fn.meta<-paste(path.coll, 'metadata.rds', sep='/');
fn.gex<-paste(path.coll, 'gex.rds', sep='/');
fn.browse<-paste(path.coll, 'browse_table.rds', sep='/');
if (!file.exists(fn.meta))
stop("Error: metadata file not exist:", fn.meta, '\n');
if (!file.exists(fn.gex))
stop("Error: expression data file not exist:", fn.gex, '\n');
if (!file.exists(fn.browse))
stop("Error: formatted tables not exist:", fn.gex, '\n');
##############
meta<-readRDS(fn.meta);
gex<-readRDS(fn.gex);
ds<-meta$Dataset;
ds.id<-intersect(names(gex), rownames(ds));
if (length(ds.id) == 0) stop('Error: no matching dataset ID in metadata table and expression matrix\n');
ds<-ds[ds.id, ];
gex<-gex[ds.id];
gex<-lapply(gex, as.matrix);
tax.nm<-tolower(ds$Species);
names(tax.nm)<-rownames(ds);
fn.homo<-paste(path.homo, 'homologene.rds', sep='/');
if (!file.exists(fn.homo))
stop("Error: Homologene file not exist:", fn.homo, '\n');
##############
fn.gene<-paste(path.gene, '/', tax.nm, '_genes_full.rds', sep='');
fn.tax<-paste(path.gene, 'name2taxid.rds', sep='/');
if (!file.exists(fn.tax))
stop("Error: Species name to Tax ID mapping not exist:", fn.tax, '\n');
if (length(fn.gene[!file.exists(fn.gene)]) > 0)
stop('Error: gene information file not exist:', paste(unique(tax.nm[!file.exists(fn.gene)]), collapse='; '));
tax.id<-readRDS(fn.tax);
names(tax.id)<-tolower(names(tax.id));
x<-setdiff(tax.nm, names(tax.id));
if (length(x) > 0) stop("Error: species not included in gene repository:", paste(x, collapse='; '), '\n');
taxid<-tax.id[tax.nm];
taxid<-c(taxid, 'human'='9606');
taxid<-taxid[!duplicated(taxid)];
id2nm<-do.call('c', lapply(meta, function(meta) meta[, 'Name']));
names(id2nm)<-unlist(lapply(meta, rownames));
nm2id<-names(id2nm);
mapping<-list(
id2name=id2nm,
name2id=setNames(names(id2nm), as.vector(id2nm)),
id2longname=setNames(paste(names(id2nm), id2nm, sep=': '), names(id2nm)),
longname2id=setNames(names(id2nm), paste(names(id2nm), id2nm, sep=': ')),
name2longname=setNames(paste(names(id2nm), id2nm, sep=': '), as.vector(id2nm)),
longname2name=setNames(as.vector(id2nm), paste(names(id2nm), id2nm, sep=': '))
);
rm(list=ls())
getwd()
PrepareGeexCollection(getwd())
gex <- readRDS('gex.rds')
head(gex[[1]])
smp <- readRDS('metadata.rds')
smp <- smp$Sample
mp <- rownames(smp)
head(mp)
names(mp) <- smp$GEO
head(mp)
length(gex)
for (i in 1:length(gex)) colnames(gex[[i]]) <- as.vector(mp[colnames(gex[[i]])])
head(gex[[1]])
saveRDS(gex, 'gex.rds')
rm(list=ls())
PrepareGeexCollection(getwd())
setwd("/zhangz/rchive/data/gex/r")
coll <- readRDS('collection.rds')
coll
coll[1:2, ]
coll
coll['C0005', ]
c <- coll[7, ]
c
c[1,1]
c[1,1] <- 'SLEx'
sapply(meta, nrow)
meta <- readRDS('../public/slex/metadata.rds')
n <- sapply(meta, nrow)
n
c
c[1, 2:4]
c[1, 2:4] <- as.vector(n)
c
c[1, 5]
c[1, 5] <- ''
c[1, 6] <- ''
c
c[1, 7] <- 'Transcriptome of Systemic Lupus Erythematosus'
c[1, 8]
c[1, 8] <- ''
c
rownames(c) <- 'C0008'
coll <- rbind(coll, c)
saveRDS(coll, 'collection.rds')
rownames(coll)
coll[9, ]
q()
shiny::runApp()
shiny::runApp()
shiny::runApp()
GEX_HOME
cid
x <- geex.load.collection('C0000', GEX_HOME)
x <- geex.load.collection('C0000', GEX_HOME, NULL, NULL, NULL)
args
args(geex.load.collection)
x <- geex.load.collection('C0000', GEX_HOME, NULL, NULL, NULL)
coll.name <- 'C0008'
coll.meta <- readRDS(paste(GEX_HOME, 'r', 'collection.rds', sep='/'));
coll.meta
dim(coll.meta)
coll.meta[9, ]
fn.load <- c('metadata', 'metadata_by_id', 'gene', 'mapping', 'browse_table', 'gex_combined');
id <- coll.name[1];
nm <- coll.meta[id, 'Name'];
id
nm
paths <- c(paste(GEX_HOME, c('public', 'private'), tolower(nm), 'r', sep='/'));
paths
path  <- paths[file.exists(paths)];
path
paths
setwd('/zhangz/rchive/data/gex/public/slex')
dir()
f <- dir()
dir.create('r')
file.existes(paths)
file.exists(paths)
file.rename(f, paste('r', f, sep='/'))
runApp('/srv/shiny-server/geex')
paths
path
path.coll('/zhangz/rchive/data/gex/public/slex/r')
path.coll <- '/zhangz/rchive/data/gex/public/slex/r'
dir()
setwd('r')
dir()
file.remove('gex_ff1')
file.remove('gex_ff2')
PrepareGeexCollection(path.coll)
runApp('/srv/shiny-server/geex')
data('DeMethodMeta')
DeMethodMeta
coll
coll[9, 6]
coll[9, 5]
coll[9, 5] <- 'Independent_Study'
coll[9, 6]
coll[9, 6] <- 'Disease_Treatment'
setwd("/srv/shiny-server/geex")
saveRDS(coll, paste(GEX_HOME, 'r/collection.rds', sep='/'))
runApp()
u <- c('https://academic.oup.com/rheumatology/article/doi/10.1093/rheumatology/kew339/2422134/Omics-studies-their-use-in-diagnosis-and')
u
u <- c(u, 'https://www.ncbi.nlm.nih.gov/pubmed/?term=24796678')
a <- AddHref(1:2, u)
a
coll[9, 9]
coll[9, 8]
coll[9, 8] <- a
a
paste(a, collapse='; ')
paste(a, collapse='; ')->a
sub('; ', ', ')->a
sub('; ', ', ', a)->a
coll[9, 8] <- a
saveRDS(coll, paste(GEX_HOME, 'r/collection.rds', sep='/'))
runApp()
BiocInstaller::biocLite('BSgenome.Mmusculus.UCSC.mm10')
q()
setwd("/srv/shiny-server/geex")
shiny::runApp()
setwd("/zhangz/rchive/data/gex/public/tomd/r")
gex <- readRDS('gex_combined.rds')
length(gex)
names(gex)
x <- gex[[1]]
x
str(x)
class(x)
?ff
attr(x)
attr(x, 'filename')
attr('filename', x)
x
names.ff(x)
dim.ff(x)
filename(x)
getwd()
filename(x) <- "/zhangz/rchive/data/gex/public/tomd/r/gex_ff1"
dir()
filename(x) <- "/zhangz/rchive/data/gex/public/tomd/r/gex_ff1"
slotName(x)
slotNames
slotNames(class(x))
x
attr(x)
?attr
attr(x, 'filename')
str(x)
attr(x, 'physical')
attr(x, 'physical')[1:2]
attr(x, 'physical')->y
class(y)
str(y)
attr(y, 'filename')
attr(y, 'filename') <- "/zhangz/rchive/data/gex/public/tomd/r/gex_ff1"
attr(x, 'physical')<- y
length(gex)
gex[[1]] <- x
x <- gex[[2]]
attr(x, 'physical')->y
attr(y, 'filename') <- "/zhangz/rchive/data/gex/public/tomd/r/gex_ff2"
attr(x, 'physical')<- y
gex[[2]] <- x
saveRDS(gex, 'gex_combined.rds')
runApp('/srv/shiny-server/geex')
setwd("/zhangz/rchive/data/gex/r")
c <- readRDS('collection.rds')
c[2, ]
c[2, 2]
c[2, 2] <- 61
readRDS('../public/tomd/r/metadata.rds')
readRDS('../public/tomd/r/metadata.rds')->meta
sapply(meta, dim)
c[2, 2:4]
c[2, 2:4] <- c(61, 239, 946)
saveRDS(c, 'collection.rds')
q()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
PlotlyPairDiffTypes()
PlotlyPairDiff
runApp()
library(devtools)
install_github('zhezhangsh/awsomicsR')
runApp()
setwd("/zhangz/rchive/data/gex/public/adhb_v1/r")
br <- readRDS('browse_table.rds')
gex <- readRDS('gex.rds')
meta <- readRDS('metadata.rds')
setwd("/zhangz/rchive/data/gex/public/adhb/r")
saveRDS(meta, 'metadata.rds')
saveRDS(gex, 'gex.rds')
saveRDS(br, 'browse_table.rds')
setwd("/zhangz/rchive/data/gex/public/adhb/r")
.libPaths()
setwd("/zhangz/rchive/data/gex/public")
file.rename('cdls', 'cdls_v1')
dir.create('cdls/r', re=T)
file.rename('mage', 'mage_v1')
dir.create('mage/r', rec=TRUE)
file.rename('nci60', 'nci60_v1')
dir.create('nci60/r', rec=TRUE)
setwd("/zhangz/rchive/data/gex/public/cdls_v1/r")
gex <- readRDS('gex.rds')
br <- readRDS('browse_table.rds')
meta <- readRDS('metadata.rds')
setwd("/zhangz/rchive/data/gex/public/cdls/r")
saveRDS(meta, 'metadata.rds')
saveRDS(br, 'browse_table.rds')
saveRDS(gex, 'gex.rds')
setwd("/zhangz/rchive/data/gex/public/cdls/r")
PrepareGeexCollection(getwd())
setwd("/zhangz/rchive/data/gex/public/mage_v1/r")
gex <- readRDS('gex.rds')
meta <- readRDS('metadata.rds')
br <- readRDS('browse_table.rds')
setwd("/zhangz/rchive/data/gex/public/mage/r")
saveRDS(br, 'browse_table.rds')
saveRDS(meta, 'metadata.rds')
saveRDS(gex, 'gex.rds')
setwd("/zhangz/rchive/data/gex/public/mage/r")
PrepareGeexCollection(getwd())
setwd("/zhangz/rchive/data/gex/public/nci60_v1/r")
meta <- readRDS('metadata.rds')
br <- readRDS('browse_table.rds')
gex <- readRDS('gex.rds')
setwd("/zhangz/rchive/data/gex/public/nci60/r")
saveRDS(gex, 'gex.rds')
saveRDS(br, 'browse_table.rds')
saveRDS(meta, 'metadata.rds')
setwd("/zhangz/rchive/data/gex/public/nci60/r")
setwd("/zhangz/rchive/data/gex/public/nci60/r")
PrepareGeexCollection(getwd())
setwd("/zhangz/rchive/data/gex/public")
f <- dir(rec=TRUE)
f[grep('ff1', f)]
f[grep('ff1', f)]->x
y <- dir()
y <- y[-grep('_v1', y)]
y
y <- y[y!='log.rds']
y
length(y)
length()
length(x)
x
sort(x)
sort(y)
setwd("/zhangz/rchive/data/gex/public/demo/r")
PrepareGeexCollection(getwd())
setwd("/zhangz/rchive/data/gex/public/gtex/r")
q()
q()
setwd("/srv/shiny-server/rnaseq_2g")
q()
shiny::runApp()
runApp()
q()
shiny::runApp('/srv/shiny-server/rnaseq_2g')
runApp('/srv/shiny-server/rnaseq_2g')
runApp('/srv/shiny-server/rnaseq_2g')
runApp('/srv/shiny-server/rnaseq_2g')
runApp()
setwd("/srv/shiny-server/rnaseq_2g")
runApp()
.libPaths()
runApp()
BiocInstaller::biocLite('DEDS')
library("DEDS", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
q()
